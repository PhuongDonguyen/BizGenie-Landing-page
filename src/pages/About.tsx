import { motion, useInView } from 'framer-motion';
import { useRef, useState } from 'react';
import { Target, Eye, Heart, Users, Award, ArrowRight } from 'lucide-react';

const About = () => {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, margin: "-100px" });

  const [activeTab, setActiveTab] = useState('about');

  const tabs = [
    { id: 'about', name: 'V·ªÅ ch√∫ng t√¥i', icon: Users },
    { id: 'mission', name: 'S·ª© m·ªánh', icon: Target },
    { id: 'vision', name: 'T·∫ßm nh√¨n', icon: Eye },
    { id: 'values', name: 'Gi√° tr·ªã c·ªët l√µi', icon: Heart }
  ];

  const tabContent = {
    about: {
      title: "BizGenie ‚Äì N·ªÅn t·∫£ng tr·ª£ l√Ω AI to√†n di·ªán cho SME Vi·ªát",
      content: "BizGenie ƒë∆∞·ª£c th√†nh l·∫≠p v·ªõi m·ª•c ti√™u tr·ªü th√†nh ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh s·ªë ƒë√°ng tin c·∫≠y cho c√°c doanh nghi·ªáp v·ª´a v√† nh·ªè t·∫°i Vi·ªát Nam. Ch√∫ng t√¥i hi·ªÉu r√µ nh·ªØng th√°ch th·ª©c m√† SMEs ph·∫£i ƒë·ªëi m·∫∑t trong qu√° tr√¨nh v·∫≠n h√†nh v√† ph√°t tri·ªÉn.",
      details: [
        "ƒê∆∞·ª£c ph√°t tri·ªÉn b·ªüi ƒë·ªôi ng≈© chuy√™n gia c√≥ kinh nghi·ªám trong lƒ©nh v·ª±c c√¥ng ngh·ªá v√† kinh doanh",
        "T·∫≠p trung v√†o vi·ªác t·∫°o ra gi·∫£i ph√°p ƒë∆°n gi·∫£n, d·ªÖ s·ª≠ d·ª•ng nh∆∞ng m·∫°nh m·∫Ω",
        "Cam k·∫øt h·ªó tr·ª£ doanh nghi·ªáp Vi·ªát Nam trong h√†nh tr√¨nh chuy·ªÉn ƒë·ªïi s·ªë"
      ]
    },
    mission: {
      title: "S·ª© m·ªánh c·ªßa ch√∫ng t√¥i",
      content: "BizGenie cam k·∫øt mang ƒë·∫øn gi·∫£i ph√°p c√¥ng ngh·ªá ti√™n ti·∫øn, gi√∫p doanh nghi·ªáp v·ª´a v√† nh·ªè t·ªëi ∆∞u h√≥a quy tr√¨nh v·∫≠n h√†nh, n√¢ng cao hi·ªáu qu·∫£ kinh doanh v√† ph√°t tri·ªÉn b·ªÅn v·ªØng.",
      details: [
        "ƒê∆°n gi·∫£n h√≥a quy tr√¨nh v·∫≠n h√†nh ph·ª©c t·∫°p",
        "Cung c·∫•p c√¥ng c·ª• qu·∫£n l√Ω t√†i ch√≠nh minh b·∫°ch",
        "H·ªó tr·ª£ ra quy·∫øt ƒë·ªãnh d·ª±a tr√™n d·ªØ li·ªáu th·ª±c t·∫ø",
        "T·∫°o ra m√¥i tr∆∞·ªùng l√†m vi·ªác hi·ªáu qu·∫£ cho doanh nghi·ªáp"
      ]
    },
    vision: {
      title: "T·∫ßm nh√¨n t∆∞∆°ng lai",
      content: "BizGenie mong mu·ªën tr·ªü th√†nh n·ªÅn t·∫£ng c√¥ng ngh·ªá h√†ng ƒë·∫ßu t·∫°i Vi·ªát Nam, ƒë·ªìng h√†nh c√πng h√†ng ngh√¨n doanh nghi·ªáp v·ª´a v√† nh·ªè trong qu√° tr√¨nh chuy·ªÉn ƒë·ªïi s·ªë v√† ph√°t tri·ªÉn b·ªÅn v·ªØng.",
      details: [
        "Tr·ªü th√†nh ƒë·ªëi t√°c c√¥ng ngh·ªá tin c·∫≠y c·ªßa SMEs Vi·ªát Nam",
        "M·ªü r·ªông d·ªãch v·ª• ra c√°c th·ªã tr∆∞·ªùng ƒê√¥ng Nam √Å",
        "Ti√™n phong trong vi·ªác ·ª©ng d·ª•ng AI v√†o qu·∫£n l√Ω doanh nghi·ªáp",
        "X√¢y d·ª±ng c·ªông ƒë·ªìng doanh nghi·ªáp s·ªë m·∫°nh m·∫Ω"
      ]
    },
    values: {
      title: "Gi√° tr·ªã c·ªët l√µi",
      content: "BizGenie x√¢y d·ª±ng n·ªÅn t·∫£ng v·ªØng ch·∫Øc d·ª±a tr√™n nh·ªØng gi√° tr·ªã c·ªët l√µi, ƒë·∫£m b·∫£o m·ªçi s·∫£n ph·∫©m v√† d·ªãch v·ª• ƒë·ªÅu mang l·∫°i gi√° tr·ªã th·ª±c s·ª± cho kh√°ch h√†ng.",
      details: [
        "ƒê·ªïi m·ªõi s√°ng t·∫°o: Kh√¥ng ng·ª´ng c·∫£i ti·∫øn v√† ph√°t tri·ªÉn",
        "Ch·∫•t l∆∞·ª£ng: Cam k·∫øt ch·∫•t l∆∞·ª£ng cao trong m·ªçi s·∫£n ph·∫©m",
        "Tin c·∫≠y: X√¢y d·ª±ng l√≤ng tin v·ªõi kh√°ch h√†ng",
        "ƒê·ªìng h√†nh: H·ªó tr·ª£ kh√°ch h√†ng trong m·ªçi b∆∞·ªõc ƒëi"
      ]
    }
  };

  const currentContent = tabContent[activeTab as keyof typeof tabContent];

  return (
    <div className="min-h-screen bg-white">
      {/* Hero Section */}
      <section className="pt-32 pb-20 bg-gradient-to-br from-blue-50 via-white to-purple-50">
        <div className="max-w-7xl mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center mb-16"
          >
            <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6">
              V·ªÅ <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">BizGenie</span>
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
              Ch√∫ng t√¥i l√† n·ªÅn t·∫£ng tr·ª£ l√Ω AI to√†n di·ªán, ƒë·ªìng h√†nh c√πng doanh nghi·ªáp v·ª´a v√† nh·ªè 
              Vi·ªát Nam tr√™n h√†nh tr√¨nh chuy·ªÉn ƒë·ªïi s·ªë v√† t·ªëi ∆∞u v·∫≠n h√†nh
            </p>
          </motion.div>
        </div>
      </section>

      {/* Tab Navigation */}
      <section className="py-8 bg-white border-b border-gray-100">
        <div className="max-w-7xl mx-auto px-4">
          <div className="flex flex-wrap justify-center gap-4">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`px-6 py-3 rounded-full font-medium transition-all duration-300 flex items-center gap-2 ${
                  activeTab === tab.id
                    ? 'bg-blue-600 text-white shadow-lg'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                <tab.icon className="w-4 h-4" />
                {tab.name}
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* Tab Content */}
      <section ref={ref} className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            {/* Left Content */}
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -30 }}
              transition={{ duration: 0.8 }}
            >
              <h2 className="text-4xl font-bold text-gray-900 mb-6">
                {currentContent.title}
              </h2>
              
              <p className="text-lg text-gray-600 leading-relaxed mb-8">
                {currentContent.content}
              </p>

              <ul className="space-y-4">
                {currentContent.details.map((detail, index) => (
                  <motion.li
                    key={index}
                    initial={{ opacity: 0, x: -20 }}
                    animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -20 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                    className="flex items-start gap-3"
                  >
                    <div className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
                    <span className="text-gray-700">{detail}</span>
                  </motion.li>
                ))}
              </ul>

              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
                transition={{ duration: 0.6, delay: 0.4 }}
                className="mt-8"
              >
                <button className="px-8 py-4 bg-blue-600 text-white font-semibold rounded-full hover:bg-blue-700 hover:shadow-lg transform hover:scale-105 transition-all duration-300 flex items-center gap-2">
                  Li√™n h·ªá v·ªõi ch√∫ng t√¥i
                  <ArrowRight className="w-5 h-5" />
                </button>
              </motion.div>
            </motion.div>

            {/* Right Image */}
            <motion.div
              initial={{ opacity: 0, x: 30 }}
              animate={isInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 30 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="relative"
            >
              <div className="w-full h-96 lg:h-[500px] bg-gradient-to-br from-blue-50 to-purple-50 rounded-2xl border-2 border-dashed border-blue-300 flex items-center justify-center">
                <div className="text-center text-blue-500">
                  <div className="text-6xl mb-4">üñºÔ∏è</div>
                  <p className="text-lg font-medium">Picture</p>
                  <p className="text-sm">Placeholder for about image</p>
                </div>
              </div>
            </motion.div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-20 bg-gray-900 text-white">
        <div className="max-w-7xl mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl font-bold mb-6">
              Th√†nh t·ª±u c·ªßa <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400">BizGenie</span>
            </h2>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              { icon: Users, number: "500+", label: "Doanh nghi·ªáp tin t∆∞·ªüng" },
              { icon: Award, number: "95%", label: "Kh√°ch h√†ng h√†i l√≤ng" },
              { icon: Target, number: "3+", label: "NƒÉm kinh nghi·ªám" }
            ].map((stat, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                className="text-center"
              >
                <div className="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-6">
                  <stat.icon className="w-10 h-10 text-white" />
                </div>
                <div className="text-4xl font-bold mb-2">{stat.number}</div>
                <p className="text-gray-300">{stat.label}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default About;
